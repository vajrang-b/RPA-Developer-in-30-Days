<Activity mc:Ignorable="sap sap2010" x:Class="Hackathon_Remember" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="CounterGet" Type="InOutArgument(x:Int32)" />
    <x:Property Name="out_N1Memorice" Type="InOutArgument(x:Int32)" />
    <x:Property Name="out_N2Memorice" Type="InOutArgument(x:Int32)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>999,1426</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Hackathon_Remember_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="21">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="21">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="959,1346" sap2010:WorkflowViewState.IdRef="Sequence_10">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence sap2010:Annotation.AnnotationText="Extract the number 1 and 2 requested, from the text string provided to the robot." DisplayName="Hackathon_Remember" sap:VirtualizedContainerService.HintSize="921,1254" sap2010:WorkflowViewState.IdRef="Sequence_1">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="GetText1" />
        <Variable x:TypeArguments="s:String[]" Name="GetNumber1" />
        <Variable x:TypeArguments="x:String" Name="Number1" />
        <Variable x:TypeArguments="s:String[]" Name="GetNumber2" />
        <Variable x:TypeArguments="x:String" Name="GetText2" />
        <Variable x:TypeArguments="x:String" Name="Number2" />
        <Variable x:TypeArguments="x:Int32" Name="TotalSuma" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Attach Browser (rpa Hackathon, &quot;Remember&quot;)" sap:VirtualizedContainerService.HintSize="883,1134" sap2010:WorkflowViewState.IdRef="BrowserScope_2" Selector="&lt;html app='chrome.exe' title='HACKATHON by Vincix Group' /&gt;">
        <ui:BrowserScope.Body>
          <ActivityAction x:TypeArguments="x:Object">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="853,1026" sap2010:WorkflowViewState.IdRef="Sequence_9">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="815,934" sap2010:WorkflowViewState.IdRef="Sequence_8">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[CounterGet = 1]" sap:VirtualizedContainerService.HintSize="777,842" sap2010:WorkflowViewState.IdRef="If_2">
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="368,693" sap2010:WorkflowViewState.IdRef="Sequence_6">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text Number (1)" sap:VirtualizedContainerService.HintSize="330,68" sap2010:WorkflowViewState.IdRef="GetValue_5">
                        <ui:GetValue.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;webctrl aaname='Remember this number: *' tag='DIV' /&gt;" WaitForReady="INTERACTIVE" />
                        </ui:GetValue.Target>
                        <ui:GetValue.Value>
                          <OutArgument x:TypeArguments="x:String">[GetText1]</OutArgument>
                        </ui:GetValue.Value>
                      </ui:GetValue>
                      <Assign DisplayName="Assign Split Number 1" sap:VirtualizedContainerService.HintSize="330,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                        <Assign.To>
                          <OutArgument x:TypeArguments="s:String[]">[GetNumber1]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="s:String[]">[GetText1.Split({"number:"},StringSplitOptions.RemoveEmptyEntries)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="Assign Trim Number 1" sap:VirtualizedContainerService.HintSize="330,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[Number1]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[GetNumber1(1).TrimEnd.TrimStart]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="Assign (Cint Number 1)" sap:VirtualizedContainerService.HintSize="330,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[out_N1Memorice]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[cint(Number1.ToString)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="Assign Counter Number" sap:VirtualizedContainerService.HintSize="330,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[CounterGet]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[CounterGet + 1]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:LogMessage DisplayName="Log Message Number 1" sap:VirtualizedContainerService.HintSize="330,93" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;This is the first number extracted to remember: &quot; + out_N1Memorice.ToString]" />
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="368,593" sap2010:WorkflowViewState.IdRef="Sequence_7">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text Number 2" sap:VirtualizedContainerService.HintSize="330,68" sap2010:WorkflowViewState.IdRef="GetValue_6">
                        <ui:GetValue.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;webctrl aaname='Remember this number: *' tag='DIV' /&gt;" WaitForReady="INTERACTIVE" />
                        </ui:GetValue.Target>
                        <ui:GetValue.Value>
                          <OutArgument x:TypeArguments="x:String">[GetText2]</OutArgument>
                        </ui:GetValue.Value>
                      </ui:GetValue>
                      <Assign DisplayName="Assign Split Number 2" sap:VirtualizedContainerService.HintSize="330,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                        <Assign.To>
                          <OutArgument x:TypeArguments="s:String[]">[GetNumber2]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="s:String[]">[GetText2.Split({"number:"},StringSplitOptions.RemoveEmptyEntries)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="Assign Trim Number 2" sap:VirtualizedContainerService.HintSize="330,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[Number2]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[GetNumber2(1).TrimEnd.TrimStart]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="Assign Cint Number 2" sap:VirtualizedContainerService.HintSize="330,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[out_N2Memorice]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[cint(Number2.ToString)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:LogMessage DisplayName="Log Message Number 2" sap:VirtualizedContainerService.HintSize="330,93" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;This is the second number extracted to remember: &quot; + out_N2Memorice.ToString]" />
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </Sequence>
          </ActivityAction>
        </ui:BrowserScope.Body>
      </ui:BrowserScope>
    </Sequence>
  </Sequence>
</Activity>